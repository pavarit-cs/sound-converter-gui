# This file's core logic and structure were primarily generated by an AI assistant.

from pydub import AudioSegment
from pydub.exceptions import CouldntDecodeError # Corrected typo here
import os
import shutil

# Attempt to locate and set FFmpeg path automatically
ffmpeg_path = shutil.which("ffmpeg.exe")
if ffmpeg_path:
    AudioSegment.converter = ffmpeg_path
    AudioSegment.ffprobe = shutil.which("ffprobe.exe")
    print(f"INFO: FFmpeg (ffmpeg.exe) detected at: {AudioSegment.converter}")
else:
    ffmpeg_path = shutil.which("ffmpeg")
    if ffmpeg_path:
        AudioSegment.converter = ffmpeg_path
        AudioSegment.ffprobe = shutil.which("ffprobe")
        print(f"INFO: FFmpeg (ffmpeg) detected at: {AudioSegment.converter}")
    else:
        print("WARNING: FFmpeg executable not found in system PATH. Conversion might fail.")

def convert_audio_file(input_path, output_path, output_format):
    """
    Function for converting audio files.
    Returns:
        tuple: (True, "Success message") if conversion succeeds,
               (False, "Error message") if conversion fails.
    """
    if not os.path.exists(input_path):
        return False, f"ERROR: Input file not found at {input_path}"

    if not AudioSegment.converter:
        return False, "ERROR: FFmpeg executable not found. Please check installation and PATH."

    _, input_ext = os.path.splitext(input_path)
    input_ext = input_ext.lower().lstrip('.')

    try:
        audio = AudioSegment.from_file(input_path, format=input_ext)

        if output_format == "m4a":
            # m4a typically uses mp4 container with aac codec
            audio.export(output_path, format="mp4", codec="aac")
            # For higher quality, consider 'libfdk_aac' if your FFmpeg build supports it:
            # audio.export(output_path, format="mp4", codec="libfdk_aac")
        elif output_format == "mp3":
            # Specify bitrate for MP3 for quality and file size control (e.g., 192kbps)
            audio.export(output_path, format="mp3", bitrate="192k")
        else:
            # For wav and other formats, use default export
            audio.export(output_path, format=output_format)

        return True, "File conversion successful!"
    except FileNotFoundError:
        return False, "ERROR: FFmpeg could not be executed. Please ensure FFmpeg is correctly installed and accessible."
    except CouldntDecodeError:
        return False, "ERROR: Could not decode input file. Please check file format or if the file is corrupted."
    except Exception as e:
        return False, f"UNEXPECTED ERROR: {e}"

